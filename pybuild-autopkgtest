#! /usr/bin/env perl
# vim: et ts=4 sw=4
# Copyright Â© 2021 Antonio Terceiro <terceiro@debian.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

use strict;
use warnings;
use File::Basename;
use File::Temp qw( tempdir );
use Debian::Debhelper::Buildsystem::pybuild;
use Debian::Debhelper::Dh_Lib qw(doit);

sub main {
    my $tmpdir = tempdir( CLEANUP => 1);
    my $run = "${tmpdir}/run";
    open(RUN, ">", $run) or die($!);
    print(RUN "#!/usr/bin/make -f\n");
    print(RUN "include debian/rules\n");
    print(RUN "pybuild-autopkgtest:\n");
    printf(RUN "\tpybuild-autopkgtest\n");
    close(RUN);
    chmod(0755, $run);
    $ENV{PYBUILD_AUTOPKGTEST} = "1";
    if (system("grep -q ^before-pybuild-autopkgtest: debian/rules") == 0) {
        doit($run, "before-pybuild-autopkgtest");
    }
    doit($run, "pybuild-autopkgtest");
    if (system("grep -q ^after-pybuild-autopkgtest: debian/rules") == 0) {
        doit($run, "after-pybuild-autopkgtest");
    }
}

sub child {
    # The child inherits the environment defined in debian/rules
    my $dh = Debian::Debhelper::Buildsystem::pybuild->new();
    foreach my $command ($dh->pybuild_commands('autopkgtest')) {
        doit(@$command);
    }
}

if (scalar(@ARGV) > 0) {
    my $prog = basename($0);
    print STDERR "usage: ${prog}\n";
    exit(1);
}

if (defined $ENV{PYBUILD_AUTOPKGTEST}) {
    child;
} else {
    main;
}
